topic: ~dlg_Python_in_QiChat()
language: enu

# Use %script tags to evaluate dynamic information with Python from QiChat

# Use %script tags sparingly, as it clutters QiChat code!

# General Usage Instructions:
# 1) Whatever value you want returned to QiChat as speech must be printed from Python using 'print'
# 2) Access any service simply by using the name of the service.
# 3) To access values captured from human input, you must name them, then access them using the 'getData(keyName)' method of the ALMemory service. You can also use this same method to access any other standard ALMemory key value.

# This topic file includes (3) separate examples:
#    - A simple example, demonstrating basic usage
#    - A functional example, demonstrating basic processing
#    - An elaborate example, demonstrating over-reliance of Python within QiChat

# Example 1: Simple, basic usage
# A simple, but impractical demonstration
u:(my name is _*) $name=$1 your name is
%script
print ALMemory.getData("name")
%script


# Example 2: Functional usage, demonstrating basic processing
u:({Pepper} what is ["the sum of _* and _*" "_* [plus and] _*"]) $value1=$1 $value2=$2 the sum of $value1 and $value2 is
%script
value1 = ALMemory.getData("value1")
value2 = ALMemory.getData("value2")
try:
    value1 = int(value1)
    value2 = int(value2)
except Exception:
    pass
print value1 + value2
%script

# Example 3: Elaborate Usage
# Technically fine and functional, but arguably too much Python processing. 
# QiChat should be more about conversation and less about Python! This example
# could arguably be better executed with a conjunction of QiChat, ALMemory Events,
# and a Python Box.
concept:(number) [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
		 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
 		 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60]

u:(e:onStart) how long would you like me to be on break?
	u1:(_~number _[second seconds minute minutes]) $timeInput=$1 $plural=$2 

%script 
timeInput = ALMemory.getData("timeInput") 
plural = memory.getData("plural")

try: 
	numberMap = {"one":1, "two":2, "three":3, "four":4, "five":5, "six":6, 
	"seven":7, "eight":8, "nine":9, "ten":10} 
	timeInput = numberMap[timeInput] 
except: pass

seconds = 0

if plural.find("minute") == -1: 
	seconds = int(timeInput) 
else: seconds = int(timeInput) * 60

print "ok. I will sleep for " + str(timeInput) + " " + 
plural ALMemory.raiseEvent("TakeABreak/seconds", seconds) 
%script